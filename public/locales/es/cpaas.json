{
  "cpas.label.name": "Name",
  "cpas.label.platformvendor": "Platform Vendor",
  "cpas.label.application": "Application",
  "cpas.addcpasprovider.tooltip.text": "Add CPaaS",
  "cpas.header.Create_New_Cpas": "CPaaS Provider Configuration",
  "cpas.label.autoupdate": "Auto Update",
  "cpas.label.platformvendr": "Platform Vendor",
  "cpas.label.providername": "Provider Name",
  "cpas.label.applicationname": "Application Name",
  "cpas.label.applicationtokenurl": "Application Token URL",
  "cpas.label.providercredentials": "Provider Credentials",
  "cpas.label.username": "Tropo User Name",
  "cpas.label.password": "Tropo Password",
  "cpas.label.restapiurl": "REST API URL",
  "cpas.btn.sync": "Sync",
  "cpas.btn.save": "Save",
  "cpas.add.success": "CPaaS Provider Configuration Created Successfully",
  "cpas.add.namealreadyexist": "CPaaS Provider Configuration Name Already Exist",
  "cpas.update.success": "CPaaS Provider Configuration updated Successfully",
  "cpas.deleted.success": "CPaaS Provider Configuration Deleted Successfully",
  "cpas.tropo.connection.error": "Unable to connect Nexmo",
  "cpas.appname.tooltip": "Specify the application name provided in website",
  "cpas.apptokenurl.tooltip": "Specify the Application Token URL provided in the website for the application",
  "cpas.delete.confirm": "Delete CPaaS Provider Configuration?",
  "cpas.btn.refresh": "Refresh",
  "cpas.addform.name.pattern": "Enter valid CPaaS Provider Configuration Name.",
  "cpas.addform.name.validate": "CPaaS Provider Configuration Name field cannot be empty",
  "cpas.addform.vemdor.validate": "Select Platform Vendor",
  "cpas.addform.username.validate": "Tropo User Name cannot be empty",
  "cpas.addform.userpsw.validate": "Tropo Password cannot be empty",
  "cpas.addform.tropourl.validate": "REST API URL cannot be empty",
  "cpas.addform.appname.validate": "Select Application Name",
  "cpas.addform.apptokenurl.validate": "Application Token URL field cannot be empty",
  "cpas.addform.userappname.validate": "Application Name field cannot be empty",
  "cpas.pageheader": "CPaaS Provider Configuration",
  "cpas.app.tokenprogress": "Retriving Token:",
  "cpas.myGridcpas.row.delete.title.default": "delete",
  "cpas.myGridcpas.row.delete.title.ivrmapped": "CPaaS Provider cannot be deleted since it mapped with IVR Template",
  "cpas.appsecret.tooltip": "Specify the Application Secret Key provided in the website for the application",
  "cpas.label.applicationsecretkey": "Application Secret Key",
  "cpas.addform.appsecretkey.validate": "Secret Key field cannot be empty",
  "cpas.label.applicationtoken": "Application Token",
  "cpas.cpashelptext": "CPaas System Configuration help",
  "cpas.label.outboundname": "Description",
  "cpas.label.outboundani": "Outbound Caller ID",
  "cpas.label.outboundtitle": "Outbound Caller ID",
  "cpas.outboundani.tooltip": "CPaaS Number to set Caller ID for Voice Campaign Outbound calls.",
  "cpas.phonenumber.validmessage": "Please enter Phone number without '-' ",
  "cpas.alerter.validmessage.NexmoANI.required": "Please enter Outbound Caller information",
  "cpas.alerter.validNexmoANI.required": "Please enter valid Caller ID only with numbers",
  "cpas.label.fileupload": "PrivateKey",
  "cpas.label.applicationid": "Application Id",
  "cpas.myGridcpas.row.delete.title.RPmapped": "CallerId is configured with RoutingProfile and Campaigns",
  "amz.alerter.validmessage.aniid.duplicate": "ANI number cannot be duplicated",
  "cpas.label.fileselect": "Selected file",
  "cpas.applicationid.tooltip": "Application ID is the ID of the Nexmo application which we use to make calls. To generate Applicaion ID, login into Nexmo account and create an Applciaion. Once applicaiton created we will get Applicaion ID.",
  "cpas.fileupload.tooltip": "Private key is generated when we create an application in Nexmo website. We can download the PrivateKey and keep in the local server. This Private key is used for Authorising Nexmo calls.",
  "cpas.alerter.fileupload.required": "Import the file",
  "cpas.label.APIkey": "API Key",
  "cpas.btn.APICall": "Get Nexmo Numbers",
  "cpas.label.secretkey": "Secret Key",
  "cpas.addform.usercpasAPIkey.validate": "API Key field cannot be empty",
  "cpas.label.nexmodatacenter": "Data Center",
  "cpas.Add_New_Row": "Add New Row",
  "cpas.Delete_Row": "Delete Row",
  "cpas.apptoken.tooltip": "Specify the Application API Key provided in the website for the application",
  "cpas.label.CpasURL": "CPaaS URL",
  "cpas.label.CpasgatewayURL": "CPaaS Gateway URL",
  "cpas.addform.CpasgatewayURL.validate": "CPaaS Gateway URL cannot be empty",
  "cpas.addform.usercpasURL.validate": "CPaaS URL cannot be empty",
  "cpas.predictive.TenantID.label": "TenantID",
  "cpas.predictive.MinEnergy.label": "Minimum Energy(1-100)",
  "cpas.predictive.Timelimit.label": "Time Limit(1000-5000 Millisecs)",
  "cpas.predictive.Sentivity.label": "Sensitivity(1-10)",
  "cpas.predictive.Logvoice.label": "Log Voice",
  "cpas.predictive.Breakevents.label": "Break Events",
  "cpas.predictive.LogtopFrequency.label": "Log Top Frequency",
  "cpas.predictive.TotalTimeout.label": "Total Timeout(Millisecs)",
  "cpas.predictive.AdvSettings.label": "Advanced Settings",
  "cpas.predictive.AdvParameters.label": "Advanced Parameters:",
  "cpas.predictive.label.CPAEvent": "CPA Event",
  "cpas.predictive.label.Frequency": "Frequency",
  "cpas.predictive.label.Threshold": "Threshold",
  "cpas.predictive.label.Tones": "Tones",
  "cpas.alerter.validmessage.cpadetectiveevent.duplicate": "Tones should have not same CPA Detect event selected twice. Kindly change or remove the duplicate Event",
  "cpas.PredictiveHelp.TenantID.title": "TenantID:",
  "cpas.PredictiveHelp.TenantID.help": "The current Tenant ID.",
  "cpas.PredictiveHelp.Timelimit.title": "Time Limit",
  "cpas.PredictiveHelp.Timelimit.help": "The time limit, in milliseconds, for the application to detect CPA. For example, if the CPA does not detect the voice within this limit, it considered as a human voice. Select values between 1000 and 5000 milliseconds.",
  "cpas.PredictiveHelp.Sensitivity.title": "Sensitivity:",
  "cpas.PredictiveHelp.Sensitivity.help": "Select a sensitivity value between 1 and 10.",
  "cpas.PredictiveHelp.Minenergy.title": "Minimum Energy:",
  "cpas.PredictiveHelp.Minenergy.help": "Enter a minimum energy level (volume) that is required for CPA detection.",
  "cpas.PredictiveHelp.Totaltimeout.title": "Total Timeout:",
  "cpas.PredictiveHelp.Totaltimeout.help": "The time, in milliseconds, at which the application stops the CPA analysis. ",
  "cpas.PredictiveHelp.Breakevents.title": "Break Events: ",
  "cpas.PredictiveHelp.Breakevents.help": "Comma-separated list of frequencies or events on which the CPA analysis can stop. e.g  FX, AM",
  "cpas.PredictiveHelp.Logtopfrequency.title": "Log Top Frequency: ",
  "cpas.PredictiveHelp.Logtopfrequency.help": "The number of top frequencies to log. Use only for debugging purposes.",
  "cpas.PredictiveHelp.Logvoice.title": "Log Voice: ",
  "cpas.PredictiveHelp.Logvoice.help": "If you turn the Log Voice switch ON, it tells the system whether or not to record and store the analysis stream.",
  "cpas.PredictiveHelp.Tones.title": "Tones:",
  "cpas.PredictiveHelp.Tones.help": "Select the Tones and the corresponding frequencies next. The single tone frequencies to be detected and the tolerance levels for each frequency. This is an json object with the each key being a name for the frequency and value being the frequency and tolerance in Hertz, separated by a pipe(|).From the CPA Event drop-down list, select an event. The events are FX (fax), MD (Modem), BP (Beep detection), and AM (Answering Machine).",
  "cpas.alerter.validmessage.CPADetectEvent.required": "Please enter CPA DetectEvent under Tones",
  "cpas.alerter.validmessage.Breakevents.required": "Please enter Breakevents for CPA Parameter",
  "cpas.providername.tooltip": "CPaaS Provider name",
  "cpas.platformvendor.tooltip": "CPaaS Providers will be listed to select providers Amazon CPaaS, Acqueon Chime",
  "cpas.CpasURL.tooltip": "This is the application API URL that AEC accesses to invoke the APIs to provide CPaaS Chime services.",
  "cpas.CpasgatewayURL.tooltip": "This is the application API gateway URL that AEC accesses to invoke the APIs to provide CPaaS Chime services.",
  "cpas.cpaparameter.lable": "CPA Parameter (Amazon Chime)",
  "cpas.cpaevent.fx": "Fax",
  "cpas.cpaevent.md": "Modem",
  "cpas.cpaevent.bp": "Beep",
  "cpas.cpaevent.am": "Machine",
  "cpas.pagetitle": "CPaaS Settings",
  "cpas.cpasicon": "CPaaS icon",
  "cpas.acqueondialer.label.providername": "Name",
  "cpas.acqueoncpaas.label.providername": "Name",
  "cpas.add.acqueondialer.success": "Acqueon Dialer Configuration Created Successfully",
  "cpas.add.acqueondialer.namealreadyexist": "Acqueon Dialer Configuration Name Already Exist",
  "cpas.update.acqueondialer.success": "Acqueon Dialer Configuration updated Successfully",
  "cpas.add.acqueoncpaas.success": "Acqueon CPaaS Configuration Created Successfully",
  "cpas.add.acqueoncpaas.namealreadyexist": "Acqueon CPaaS Configuration Name Already Exist",
  "cpas.update.acqueoncpaas.success": "Acqueon CPaaS Configuration updated Successfully",
  "cpas.addform.acqueondialer.name.validate": "Name field cannot be empty",
  "cpas.addform.acqueoncpaas.name.validate": "Name field cannot be empty",
  "cpas.label.acqueondialer.CpasURL": "Dialer URL",
  "cpas.label.acqueondialer.CpasgatewayURL": "Gateway URL",
  "cpas.addform.acqueondialer.CpasgatewayURL.validate": "Gateway URL cannot be empty",
  "cpas.addform.acqueondialer.usercpasURL.validate": "Dialer URL cannot be empty",
  "cpas.btn.viewcallerid": "View Outbound Caller ID",
  "cpas.cpasCallerId": "Outbound Caller ID",
  "cpas.acqueondialer.CpasgatewayURL.example": "For Ex: sofia/gateway/chime",
  "cpas.acqueondialer.CpasdialerURL.example": "For Ex: https://aec42stpod02.aecdevops.com/api/"
}