{
	"sms.domain.userName.label": "User Name",
	"sms.domain.userName.required": "User Name field cannot be empty",
	"sms.domain.password.label": "Password",
	"sms.domain.password.required": "Password field cannot be empty",
	"sms.domain.password.title": "Fill this field",
	"sms.domain.button.save": "Save",
	"sms.sms.heading": "SMS",
	"sms.Configuration.Name": "Configuration Name",
	"sms.delivery.status.URL": "Delivery Status URL",
	"sms.server.cred": "SMS SERVER CREDENTIALS",
	"sms.form.EmailForm.cancel.label": "Cancel",
	"sms.CreateSMS.button": "Create SMS",
	"sms.EditSMS.button": "Edit SMS",
	"sms.mySMSSettings.SMSServerName.heading": "SMS Server Name",
	"sms.GatewayURL": "Gateway URL",
	"sms.prefix": "Prefix",
	"sms.form.SMSForm.Suffix.label": "Suffix",
	"sms.form.SMSForm.LCMKey.label": "LCM Key",
	"sms.mySMSSettings.delete.confirmMsg": "Do you want to delete this SMS Configuration?",
	"sms.mySMSSettings.serverName.title": "Fill SMS Configuration Server Name",
	"sms.mySMSSettings.serverName.required": "SMS Configuration Server Name cannot be empty.",
	"sms.mySMSSettings.sMSWebLink.title": "Fill SMS Gateway URL",
	"sms.mySMSSettings.sMSWebLink.required": "SMS Gateway URL cannot be empty.",
	"sms.smsUserName.title": "Fill User Name",
	"sms.mySMSSettings.smsUserName.required": "SMS User Name cannot be empty.",
	"sms.mySMSSettings.smsPassword.title": "Fill Password",
	"sms.mySMSSettings.smsPassword.required": "SMS Password cannot be empty.",
	"sms.mySMSSettings.saveSuccess": "SMS Configured Successfully.",
	"sms.mySMSSettings.saveFail": "SMS Configuration Name already exists.",
	"sms.mySMSSettings.delete.successMsg": "SMS Configuration Deleted Successfully.",
	"sms.ErrorMsg": "Internal Error.",
	"sms.mySMSSettings.delete.mappedcampaign": "SMS Server Mapped with Campaign,Cannot be Deleted",
	"sms.pageheader": "System Configuration",
	"sms.sidenav.add.header": "Add New SMS Configuration",
	"sms.mySMSSettings.smsUserName.title": "Fill UserName",
	"sms.form.SMSForm.UNexsysKey.label": "UNexsys Key",
	"sms.form.SMSForm.GatewayType.label": "Gateway URL",
	"sms.smpp": "SMPP",
	"sms.form.SMSForm.CPaaSType.label": "CPaaS",
	"sms.form.SMSForm.GatewayCredential.label": "Gateway Credential",
	"sms.form.SMSForm.SMPPCredential.label": "SMPP Credential",
	"sms.form.SMSForm.CPaaSCredential.label": "CPaaS Credential",
	"sms.mySMSSettings.Toppo.title": "Tropo",
	"sms.mySMSSettings.Twilio.title": "Twilio",
	"sms.mySMSSettings.APIURL.title": "Fill SMS API Url",
	"sms.mySMSSettings.APIURL.title.required": "SMS API Url cannot be empty.",
	"sms.mySMSSettings.APIURL.heading": "SMS API Url",
	"sms.mySMSSettings.Token.title": "Fill SMS API Token",
	"sms.mySMSSettings.Token.title.required": "SMS API Token cannot be empty.",
	"sms.api.token": "SMS API Token",
	"sms.mySMSSettings.SMSSMPPServerName.heading": "Server Name",
	"sms.mySMSSettings.SMSSMPPServerName.title.required": "SMPP Configuration Server Name cannot be empty.",
	"sms.mySMSSettings.SMSSMPPServerName.title": "Fill SMPP Server Name",
	"sms.smpp.username": "SMPP User Name",
	"sms.mySMSSettings.SMPPUserName.title.required": "SMPP User Name cannot be empty.",
	"sms.mySMSSettings.SMPPUserName.title": "Fill SMPP User Name",
	"sms.smpp.password": "SMPP Password",
	"sms.mySMSSettings.SMPPPassword.title.required": "SMPP Password cannot be empty.",
	"sms.mySMSSettings.SMPPPassword.title": "Fill SMPP Password",
	"sms.mySMSSettings.ApiId.title": "Fill SMS API Id",
	"sms.mySMSSettings.ApiId.title.required": "SMS API Id cannot be empty.",
	"sms.apiid": "SMS API Id",
	"sms.mySMSSettings.Type.heading": "SMS Server Type",
	"sms.mySMSSettings.closeTip": "Close",
	"sms.mySMSSettings.SMPPPort.heading": "SMPP Port",
	"sms.mySMSSettings.URL.patternError": "Enter valid URL",
	"sms.mySMSSettings.SMPPPort.title.required": "SMS Port cannot be empty.",

	"sms.mySMSSettings.ReceiverAPI.title.required": "SMS Receiver API URL cannot be empty.",
	"sms.mySMSSettings.SMSReceiverAPI.title": "Fill SMS Receiver API URL.",
	"sms.receiver.api.url": "SMS Receiver API URL",
	"sms.mySMSSettings.PrefixNumber.title": "Fill Prefix number",
	"sms.mySMSSettings.PrefixNumberrequired": "Enter Prefix number",
	"sms.form.SMSForm.SenderReceiver.label": "Sender and Receiver",
	"sms.form.SMSForm.SMPPTypeSender.label": "Sender",
	"sms.form.SMSForm.SMPPTypeReceiver.label": "Receiver",
	"sms.receiver.instances": "Number of Receiver Instance",
	"sms.senderReceiverSelection.error.toaster": "Either select Sender or select minimum 1 Receiver.",
	"sms.senderReceiverOptionSelection.error.toaster": "Select atleast one SMS Mode",
	"sms.provider.lable": "Provider",
	"sms.mode": "SMS Mode",
	"sms.mySMSSettings.Nexmo.title": "Nexmo",
	"sms.form.SMSForm.DeliveryStatus.label": "Required Delivery Status",
	"sms.addNewServer.label": "Add SMS Server",
	"sms.add.smstemplate.wiz1": "Server Details",
	"sms.add.smstemplate.wiz2": "Server Credential",
	"sms.add.smstemplate.wiz3": "Server Configuration",
	"sms.mySMSSettings.Description": "Description",
	"sms.nav.btn.NEXT": "NEXT",
	"sms.nav.btn.PREVIOUS": "PREVIOUS",
	"sms.form.SMSForm.DeliveryStatus.URL.label": "DeliveryStatusURL",
	"sms.mySMSSettings.DelivaryStatusCallBackURL.title.required": "Delivary Status CallBack URL field is required.",
	"sms.mySMSSettings.ServerType.label": "Server Type",
	"sms.editServer.label": "Edit SMS Server",
	"sms.mySMSSettings.CPasSType.required": "Please select a SMS Provider.",
	"sms.cPassType.select.label": "Select CPass type",
	"sms.message.smsnameexists_50089": "SMS Server name already exists. Please enter a diffrent name.",
	"sms.api.url": "SMS API URL",
	"sms.mySMSSettings.SmsUrl.title": "Fill SMS API URL",
	"sms.mySMSSettings.SmsUrl.title.required": "SMS URL cannot be empty.",
	"sms.mySMSSettings.Webhook.heading": "Webhook",
	"sms.form.SMSForm.PollingMethod.label": "Polling Method",
	"sms.form.SMSForm.numberOfMessageIdPerRequest.label": "Number of message ID per request",
	"sms.DeliveryStatusType": "Delivery Status Type",
	"sms.form.SMSForm.PollingRange.label": "Polling Range (Minutes)",
	"sms.mySMSSettings.NumberOfMessageIdPerRequest.title.required": "Number of Message Id per request is required.",
	"sms.mySMSSettings.NumberOfMessageIdPerRequest.patternError": "Invalid input.Number of Message Id per request cannot be decimal.",
	"sms.form.SMSForm.PollingRangeMax.label": "Max",
	"sms.form.SMSForm.PollingRangeMin.label": "Min",
	"sms.form.SMSForm.Configuration.label": "Configuration Help Text",
	"sms.form.SMSForm.Help.label": "Help",
	"sms.form.SMSForm.ConfigurationHelpText.Text": "API trigger to get SMS delivery status will trigger after configured polling range min value(in minutes), and the trigger will be continue till the max range value(in minutes).",
	"sms.cPassProvider.lable": "Provider",
	"sms.aws.apiid": "AWS App ID",
	"sms.mySMSSettings.AWSAccessKey": "AWS Access Key",
	"sms.mySMSSettings.AWSSecretKey": "AWS Secret Key",
	"sms.mySMSSettings.AWSRegion": "AWS Region",
	"sms.aws.apiid.required": "AWS App ID cannot be empty",
	"sms.mySMSSettings.AWSAccessKey.required": "AWS Access Key cannot be empty.",
	"sms.mySMSSettings.AWSSecretKey.required": "AWS Secret Key cannot be empty.",
	"sms.mySMSSettings.AWSRegion.required": "AWS Region cannot be empty.",
	"sms.aws.apiid.title": "Fill AWS App ID",
	"sms.mySMSSettings.AWSAccessKey.title": "Fill AWS Access Key.",
	"sms.mySMSSettings.AWSSecretKey.title": "Fill AWS Secret Key.",
	"sms.mySMSSettings.AWSRegion.title": "Fill AWS Region.",
	"sms.mySMSSettings.Aesmsapiurl.title": "Fill AE SMS API URL",
	"sms.mySMSSettings.Aesmsapiurl": "AE SMS API URL",
	"sms.mySMSSettings.Aesmsapiurl.required": "AE SMS API URL cannot be empty.",
	"sms.roleBasedAuthentication": "Role-based Authentication",
	"sms.helptext": "Help text",
	"sms.provider.lable.text": "select the SMS provider. The supported providers are Amazon Pinpoint, Twilio, and Nexmo. You can also choose Others for standard HTTP gateway providers qualified by Acqueon Support Services.",
	"sms.roleBasedAuthentication.text": " Turn this ON if you are hosting the application server is hosted in AWS-EC2 and this AWS-EC2 has access to the Pinpoint project (that is, assumed role).  Turn this OFF if an AWS-IAM account  can access this Pinpoint project or if the server is not hosted in AWS-EC2.",
	"sms.aws.apiid.text": "AWS Pinpoint project ID with SMS channel enabled.",
	"sms.mySMSSettings.AWSAccessKey.text": "The keys to access pinpoint project in AWS. This is a combination of access key ID and secret key.",
	"sms.mySMSSettings.AWSRegion.text": "AWS Region Id where the Pinpoint project is available.",
	"sms.mySMSSettings.Aesmsapiurl.text": "The base URL of Acqueon Engagement’s  HttpSmsReceiverApi Web API application.",
	"sms.APIURL.text": "This is the URL for the application to access the SMS sender API. This is applicable only if you choose Others from the Service Provider drop-down list.",
	"sms.APIID.text": "This is the ID required to access the SMS provider’s API.",
	"sms.APItoken.text": "This is the credential required by the SMS provider to authenticate the above ID.",
	"sms.ReceiverAPIurl.Text": "This is the URL for the SMS Receiver API.",
	"sms.mySMSSettings.TwilioType.Account": "Account SID",
	"sms.mySMSSettings.TwilioType.API": "API Key",
	"sms.account.ssid": "Account SID",
	"sms.mySMSSettings.Account.title.required": "Account SID cannot be empty.",
	"sms.account.ssid.token": "Auth token",
	"sms.mySMSSettings.Api.heading.token": "Api Key",
	"sms.mySMSSettings.Account.Token.required": "Auth Token cannot be empty.",
	"sms.mySMSSettings.Api.Token.required": "Api Key cannot be empty.",
	"sms.mySMSSettings.Api.Secret": "API Secret",
	"sms.mySMSSettings.Api.Secret.title.required": "API Secret cannot be empty.",
	"sms.mySMSSettings.ApiId.titleNew": "Fill Account SID",
	"sms.mySMSSettings.Account.Token.titleNew": "Fill Auth Token/API Key",
	"sms.mySMSSettings.API.Token.titleNew": "Fill API Key",
	"sms.mySMSSettings.API.smsapiSecrettitle": "Fill API Secret."
}