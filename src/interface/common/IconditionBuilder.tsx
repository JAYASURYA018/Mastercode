export interface IconditionBuilder {
  operatorList: any;
  addGroupFieldCondition: any;
  removeGroupFieldCondition: any;
  onChangeSearchAdvanceBuilder: any;
  cssGroupConditionModel: any;
  backToFieldSelectionDialog: any;
  fieldSelection: any;
  onChangeLogicalFieldConditionList: any;
  basicFieldConditionsList: any;
  addBasicFieldCondition: any;
  enableCSSBuilderConditionText: any;
  removeBasicFieldCondition: any;
  fieldConditionsList: any;
  onChangeCompareFieldConditionList: any;
  addFieldCondition: any;
  removeFieldCondition: any;
  openFieldSelectionDialog: any;
  listInfoData: any;
  globalListIdData: any;
  getFilterSystemField: any;
  getFilterBusinessField: any;
  fieldList: any;
  showListIDSelection: any;
  showFieldSelection: any;
  showGlobalListIDSelection: any;
  showOutcomeSelection: any;
  isAllLastOutcomeSelected: any;
  isAllGlobalListSelected: any;
  onChangeCompareBasicFieldConditionList: any;
  onChangeFieldConditionListValue: any;
  globalListSelectionChange: any;
  globalListHeaderSelectionChange: any;
  applyLastoutcomeList: any;
  applyLastoutcomeListFieldCondition: any;
  applyGlobalListIdSelection: any;
  applyGlobalListIdSelectionFieldCondition: any;
  lastOutcomeHeaderSelectionChange: any;
  lastOutcomeSelectionChange: any;
  onChangeLogicalConditionList: any;
  isAllListInfoSelected: any;
  listIdHeaderSelectionChange: any;
  listIdSelectionChange: any;
  index?: number;
  index1?: number;
  fieldSelectionItem?: any;
  fieldSelectionItemId?: any;
  fieldConditionSelection?: any;
  businessFieldCount?: number;
}